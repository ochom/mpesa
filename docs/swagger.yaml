openapi: 3.0.3
info:
  title: Mpesa Middleman API - OpenAPI 3.0
  description: |-
    Mpesa APIs are simple and easy to use, however developers write so much code around it every 
    single time they need a payment gateway for their applications. So we built this middleware 
    to make it easier for developers to integrate Mpesa payment gateway into their applications without
    too much hassle.
  termsOfService: http://swagger.io/terms/
  contact:
    email: ochomrichard752@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Mpesa Middleman
  url: https://broker.app
servers:
  - url: http://localhost:8080/v1
  - url: https://api.broker.app/v1
tags:
  - name: Accounts
    description: Any mpesa account be it b2c, b2b, c2b or tax
  - name: B2C
    description: Payment made by a business to customers
  - name: C2B
    description: Payment made by customers to business
  - name: Tax Payment (TAX)
    description: Payment made by business to KRA
  - name: User
    description: Your user account providing access to the middleman
paths:
  /accounts:
    post:
      tags:
        - Accounts
      summary: Add a new account
      description: Add a new account
      operationId: addAccount
      requestBody:
        description: Create a new account
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
          application/xml:
            schema:
              $ref: "#/components/schemas/Account"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Account"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
            application/xml:
              schema:
                $ref: "#/components/schemas/Account"
        "400":
          description: Invalid input
        "422":
          description: Validation exception
      security:
        - accountstore_auth:
            - write:accounts
            - read:accounts
    get:
      tags:
        - Accounts
      summary: List accounts
      description: List accounts
      operationId: listAccounts
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Account"
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Account"
        "400":
          description: Invalid status value
      security:
        - accountstore_auth:
            - write:accounts
            - read:accounts
  /accounts{accountId}:
    put:
      tags:
        - Accounts
      summary: Update an existing account
      description: Update an existing account by Id
      operationId: updateAccount
      parameters:
        - name: accountId
          in: path
          description: ID of account that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update an existent account
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
          application/xml:
            schema:
              $ref: "#/components/schemas/Account"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Account"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
            application/xml:
              schema:
                $ref: "#/components/schemas/Account"
        "400":
          description: Invalid ID supplied
        "404":
          description: Account not found
        "422":
          description: Validation exception
      security:
        - accountstore_auth:
            - write:accounts
            - read:accounts
  /account/search:
    get:
      tags:
        - Accounts
      summary: Finds Accounts by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findAccountsByStatus
      parameters:
        - name: type
          in: query
          description: Account type
          required: false
          explode: true
          schema:
            type: string
            default: c2b
            enum:
              - b2c
              - b2b
              - c2b
              - tax
        - name: short_ode
          in: query
          description: Account short ode
          required: false
          schema:
            type: string
        - name: id
          in: query
          description: Account id
          required: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Account"
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Account"
        "400":
          description: Invalid status value
      security:
        - accountstore_auth:
            - write:accounts
            - read:accounts
  /b2c/initiate:
    post:
      tags:
        - B2C
      summary: Initiate B2C
      description: Initiate B2C
      operationId: initiateB2C
      requestBody:
        description: Initiate B2C
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/B2CInitiate"
          application/xml:
            schema:
              $ref: "#/components/schemas/B2CInitiate"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/B2CInitiate"
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/B2CInitiate"
            application/xml:
              schema:
                $ref: "#/components/schemas/B2CInitiate"
        "400":
          description: Invalid input
        "422":
          description: Validation exception
      security:
        - accountstore_auth:
            - write:accounts
            - read:accounts
  /b2c/payments:
    get:
      tags:
        - B2C
      summary: Get B2C payments
      description: Get B2C payments
      operationId: getB2CPayments
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: limit
          in: query
          description: Page limit
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/B2CPayment"
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/B2CPayment"
        "400":
          description: Invalid status value
      security:
        - accountstore_auth:
            - write:accounts
            - read:accounts
  /c2b/initiate:
    post:
      tags:
        - C2B
      summary: Initiate C2B
      description: Initiate C2B
      operationId: initiateC2B
      requestBody:
        description: Initiate C2B
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/C2BInitiate"
          application/xml:
            schema:
              $ref: "#/components/schemas/C2BInitiate"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/C2BInitiate"
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/C2BInitiate"
            application/xml:
              schema:
                $ref: "#/components/schemas/C2BInitiate"
        "400":
          description: Invalid input
        "422":
          description: Validation exception
      security:
        - accountstore_auth:
            - write:accounts
            - read:accounts
  /c2b/payments:
    get:
      tags:
        - C2B
      summary: Get C2B payments
      description: Get C2B payments
      operationId: getC2BPayments
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: limit
          in: query
          description: Page limit
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/C2BPayment"
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/C2BPayment"
        "400":
          description: Invalid status value
      security:
        - accountstore_auth:
            - write:accounts
            - read:accounts
components:
  schemas:
    Order:
      type: object
      properties:
        accountId:
          type: integer
          format: int64
          example: 198772
        quantity:
          type: integer
          format: int32
          example: 7
        shipDate:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          example: approved
          enum:
            - placed
            - approved
            - delivered
        complete:
          type: boolean
      xml:
        name: order
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
        username:
          type: string
          example: fehguy
        address:
          type: array
          xml:
            name: addresses
            wrapped: true
          items:
            $ref: "#/components/schemas/Address"
      xml:
        name: customer
    Address:
      type: object
      properties:
        street:
          type: string
          example: 437 Lytton
        city:
          type: string
          example: Palo Alto
        state:
          type: string
          example: CA
        zip:
          type: string
          example: "94301"
      xml:
        name: address
    Type:
      type: string
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Dogs
      xml:
        name: category
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: "12345"
        phone:
          type: string
          example: "12345"
        userStatus:
          type: integer
          description: User Status
          format: int32
          example: 1
      xml:
        name: user
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: tag
    Account:
      required:
        - type
        - short_ode
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        type:
          type: string
          example: b2c
          enum:
            - b2c
            - b2b
            - c2b
            - tax
        short_ode:
          type: string
          example: 470568
        name:
          type: string
          example: Sample B2C
        pass_key:
          type: string
          example: 3er4t5y6u7i8o9p0
        consumer_key:
          type: string
          example: 3er4t5y6u7i8o9p0
        consumer_secret:
          type: string
          example: 3er4t5y6u7i8o9p0
        validation_url:
          type: string
          format: uri
          example: https://api.broker.app/b2c/validate
        confirmation_url:
          type: string
          format: uri
          example: https://api.broker.app/b2c/confirm
        initiator_name:
          type: string
          example: JohnDoe
        initiator_password:
          type: string
          example: e123456
        certificate:
          type: string
          example: jksdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjsdhfkjd
      xml:
        name: account
    B2CInitiate:
      required:
        - request_id
        - account_id
        - amount
        - phone_number
        - callback_url
      type: object
      properties:
        request_id:
          type: string
          example: "123456"
        account_id:
          type: integer
          format: int64
          example: "198772"
        amount:
          type: integer
          format: int32
          example: "1000"
        phone_number:
          type: string
          example: 08123456789
        callback_url:
          type: string
          format: uri
          example: https://api.broker.app/b2c/callback
      xml:
        name: b2c_initiate
    B2CPayment:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        account_id:
          type: integer
          format: int64
          example: 10
        amount:
          type: string
          example: "1000"
        phone_number:
          type: string
          example: "254728912345"
        request_id:
          type: string
          example: "123456"
        callback_url:
          type: string
          format: uri
          example: https://api.broker.app/b2c/callback
        conversation_id:
          type: string
          example: "123456"
        originator_conversation_id:
          type: string
          example: "123456"
        transaction_id:
          type: string
          example: "NLJ41HAY6Q"
        response_code:
          type: string
          example: "0"
        response_description:
          type: string
          example: "Success"
        result_code:
          type: integer
          format: int32
          example: 0
        result_description:
          type: string
          example: "Success"
        meta:
          type: object
          properties:
            TransactionAmount:
              type: integer
              format: int32
              example: 10
            TransactionReceipt:
              type: string
              example: "NLJ41HAY6Q"
            B2CRecipientIsRegisteredCustomer:
              type: string
              example: "Y"
            B2CChargesPaidAccountAvailableFunds:
              type: integer
              format: int32
              example: -4510
            ReceiverPartyPublicName:
              type: string
              example: "254708374149 - John Doe"
            TransactionCompletedDateTime:
              type: string
              example: "19.12.2019 11:45:50"
            B2CUtilityAccountAvailableFunds:
              type: integer
              format: int32
              example: 10116
            B2CWorkingAccountAvailableFunds:
              type: integer
              format: int32
              example: 900000
        reference_data:
          type: object
          properties:
            reference_item:
              type: array
              items:
                $ref: "#/components/schemas/ReferenceItem"
      xml:
        name: b2c_payment
    ReferenceItem:
      type: object
      properties:
        key:
          type: string
          example: "QueueTimeoutURL"
        value:
          type: string
          example: "https://internalsandbox.safaricom.co.ke/mpesa/b2cresults/v1/submit"
      xml:
        name: reference_item
    C2BInitiate:
      required:
        - account_id
        - amount
        - phone_number
        - callback_url
      type: object
      properties:
        account_id:
          type: string
          format: string
          example: "198772"
        amount:
          type: string
          format: string
          example: "1000"
        phone_number:
          type: string
          format: string
          example: "254728912345"
        receipt_number:
          type: string
          format: string
          example: "123456"
        callback_url:
          type: string
          format: uri
          example: https://api.broker.app/b2c/callback
      xml:
        name: c2b_initiate
    C2BPayment:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        account_id:
          type: integer
          format: int64
          example: 10
        transaction_id:
          type: string
          example: "NLJ41HAY6Q"
        transaction_time:
          type: string
          example: "19.12.2019 11:45:50"
        transaction_type:
          type: string
          example: "CustomerPayBillOnline"
        amount:
          type: string
          example: "1000"
        phone_number:
          type: string
          example: "254728912345"
        bill_ref_number:
          type: string
          example: "123456"
        invoice_number:
          type: string
          example: "123456"
        third_party_transaction_id:
          type: string
          example: "123456"
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: "##default"
  requestBodies:
    Account:
      description: Account object that needs to be added
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Account"
        application/xml:
          schema:
            $ref: "#/components/schemas/Account"
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/User"
  securitySchemes:
    accountstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accountstore3.swagger.io/oauth/authorize
          scopes:
            write:accounts: modify accounts in your account
            read:accounts: read your accounts
    api_key:
      type: apiKey
      name: api_key
      in: header
